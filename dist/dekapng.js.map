{"version":3,"sources":["webpack:///webpack/bootstrap 299ef32555930c5e2ac9","webpack:///./src/util/adler.ts","webpack:///./src/util/crc.ts","webpack:///./src/png-writer.ts","webpack:///./src/chunks/iend.ts","webpack:///./src/chunks/ihdr.ts","webpack:///./src/chunks/pre-header.ts","webpack:///./src/index.ts","webpack:///./src/util/arraybuffer-walker.ts","webpack:///./src/util/blob-writer.ts","webpack:///./src/util/zlib.ts"],"names":[],"mappings":"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","file":"dekapng.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 299ef32555930c5e2ac9","\n\n/**\n * Calculate the ADLER32 checksum of a section of a buffer. Code largely taken from:\n * https://github.com/SheetJS/js-adler32\n * \n * @export\n * @param {(Uint8Array | Uint8ClampedArray)} buf \n * @param {number} offset \n * @param {number} length \n * @param {number} [seed] \n * @returns \n */\nexport function adler32_buf(buf: Uint8Array | Uint8ClampedArray, offset: number, length: number, seed?: number) {\n    var a = 1, b = 0, L = offset + length, M = 0;\n    if (typeof seed === 'number') { a = seed & 0xFFFF; b = (seed >>> 16) & 0xFFFF; }\n    for (var i = offset; i < L;) {\n        M = Math.min(L - i, 3850) + i;\n        for (; i < M; i++) {\n            a += buf[i] & 0xFF;\n            b += a;\n        }\n        a = (15 * (a >>> 16) + (a & 65535));\n        b = (15 * (b >>> 16) + (b & 65535));\n    }\n    return ((b % 65521) << 16) | (a % 65521);\n}\n\n\n// WEBPACK FOOTER //\n// ./src/util/adler.ts","// Generated by `./pycrc.py --algorithm=table-driven --model=crc-32 --generate=c`\nlet TABLE = new Int32Array([\n    0x00000000, 0x77073096, 0xee0e612c, 0x990951ba,\n    0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3,\n    0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988,\n    0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91,\n    0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de,\n    0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\n    0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec,\n    0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5,\n    0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172,\n    0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b,\n    0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940,\n    0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\n    0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116,\n    0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f,\n    0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924,\n    0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d,\n    0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a,\n    0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n    0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818,\n    0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01,\n    0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e,\n    0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457,\n    0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c,\n    0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\n    0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2,\n    0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb,\n    0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0,\n    0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9,\n    0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086,\n    0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n    0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4,\n    0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad,\n    0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a,\n    0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683,\n    0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8,\n    0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n    0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe,\n    0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7,\n    0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc,\n    0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5,\n    0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252,\n    0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\n    0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60,\n    0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79,\n    0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236,\n    0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f,\n    0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04,\n    0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\n    0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a,\n    0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713,\n    0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38,\n    0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21,\n    0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e,\n    0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n    0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c,\n    0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45,\n    0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2,\n    0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db,\n    0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0,\n    0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n    0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6,\n    0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf,\n    0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94,\n    0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d\n]);\n\n\n/**\n * Calculate the CRC value of a selected slice of an ArrayBuffer. Code from:\n * https://github.com/alexgorbatchev/node-crc/blob/master/src/crc32.js\n * \n * @export\n * @param {(Uint8Array | Uint8ClampedArray)} buf \n * @param {number} offset \n * @param {number} length \n * @param {number} [previous] \n * @returns {number} \n */\nexport function crc32(buf: Uint8Array | Uint8ClampedArray, offset: number, length: number, previous?: number): number {\n\n    let crc = previous === 0 ? 0 : ~~previous! ^ -1\n\n    for (let index = offset; index < offset + length; index++) {\n        const byte = buf[index];\n        crc = TABLE[(crc ^ byte) & 0xff] ^ (crc >>> 8);\n    }\n\n    return crc ^ -1;\n};\n\n\n// WEBPACK FOOTER //\n// ./src/util/crc.ts","import { BlobWriter } from './util/blob-writer';\nimport { writePreheader as writePreheader, length as PreheaderLength } from './chunks/pre-header';\nimport { writeIHDR as writeIHDR, IHDRLength as IHDRLength, PNGColorType } from './chunks/ihdr';\nimport { writeIEND as writeIEND, length as IENDLength } from './chunks/iend';\nimport { writeIDAT as writeIDAT, calculateIDATLength as calculateIDATLength, writeIDATConstant as writeIDATConstant } from './chunks/idat';\nimport { calculateZlibbedLength, ZlibWriter } from './util/zlib';\n\n\n/**\n * Create a PngPong-suitable PNG ArrayBuffer from an existing RGBA array. Combine\n * this with PNGJS to transform an existing PNG image into something PngPong can use.\n *\n * @export\n * @param {number} width\n * @param {number} height\n * @returns\n */\nexport class PNGRGBAWriter {\n\n  private walker: BlobWriter;\n  private zlibWriter: ZlibWriter;\n  private rowsLeft: number;\n\n  constructor(width: number, height: number) {\n    const walker = new BlobWriter();\n    writePreheader(walker);\n    writeIHDR(walker, {\n        width: width,\n        height: height,\n        colorType: PNGColorType.RGBA,\n        bitDepth: 8,\n        compressionMethod: 0,\n        filter: 0,\n        interface: 0\n    });\n\n    // We need to account for a row filter pixel in our chunk length\n    const dataSize = width * height * 4 + height;\n\n    // Zlibbed data will take up more space than the raw data\n    walker.writeUint32(calculateZlibbedLength(dataSize));\n\n    walker.startCRC();\n    walker.writeString(\"IDAT\");\n\n    const zlibWriter = new ZlibWriter(walker, dataSize);\n\n    this.walker = walker;\n    this.zlibWriter = zlibWriter;\n    this.rowsLeft = height;\n  }\n\n  addRow(rowData: Uint8Array) {\n    if (!this.rowsLeft) {\n      throw new Error('too many rows');\n    }\n    --this.rowsLeft;\n\n    // Write our row filter byte\n    this.zlibWriter.writeUint8(0);\n\n    rowData.forEach((data) => {\n      this.zlibWriter.writeUint8(data);\n    });\n  }\n\n  finishAndGetBlob() {\n    if (this.rowsLeft) {\n      throw new Error(`${this.rowsLeft} rows left`);\n    }\n\n    this.zlibWriter.end();\n    this.walker.writeCRC();\n\n    writeIEND(this.walker);\n    return this.walker.getBlob('image/png');\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/png-writer.ts","import { ArrayBufferWalker } from '../util/arraybuffer-walker';\n\nconst identifier = \"IEND\";\n\n\n/**\n * There is no actual content in an IEND chunk, just the identifier\n * and CRC.\n * \n * @export\n * @param {ArrayBufferWalker} walker \n */\nexport function writeIEND(walker: ArrayBufferWalker) {\n\n    walker.writeUint32(0);\n    walker.startCRC();\n    walker.writeString(identifier);\n    walker.writeCRC();\n\n}\n\nexport const length = identifier.length // identifier\n    + 4                 // CRC\n    + 4                 // length\n\n\n// WEBPACK FOOTER //\n// ./src/chunks/iend.ts","import { ArrayBufferWalker } from '../util/arraybuffer-walker';\n\nexport type validBitDepth = 1 | 2 | 4 | 8 | 16;\n\n/**\n * The color type our image uses. PngPong currently only supports\n * Palette images, PNGColorType.Palette\n * \n * @export\n * @enum {number}\n */\nexport enum PNGColorType {\n    Grayscale = 0,\n    RGB = 2,\n    Palette = 3,\n    GrayscaleWithAlpha = 4,\n    RGBA = 6\n}\n\n\n/**\n * The attributes for an IHDR chunk as defined in \n * http://www.libpng.org/pub/png/spec/1.2/PNG-Chunks.html#C.IHDR\n * \n * @export\n * @interface IHDROptions\n */\nexport interface IHDROptions {\n    width: number;\n    height: number;\n    bitDepth: validBitDepth;\n    colorType: PNGColorType;\n    compressionMethod: number;\n    filter: number;\n    interface: number;\n}\n\nexport function writeIHDR(walker: ArrayBufferWalker, options: IHDROptions) {\n\n    // IHDR length is always 13 bytes\n    walker.writeUint32(13);\n\n    walker.startCRC();\n    walker.writeString(\"IHDR\");\n\n    walker.writeUint32(options.width);\n    walker.writeUint32(options.height);\n\n    walker.writeUint8(options.bitDepth);\n    walker.writeUint8(options.colorType);\n    walker.writeUint8(options.compressionMethod);\n    walker.writeUint8(options.filter);\n    walker.writeUint8(options.interface);\n\n    walker.writeCRC();\n\n}\n\n/**\n *  IHDR length is always 13 bytes. So we can store this as a constant.\n */\nexport const IHDRLength = 4 // Chunk length identifier\n    + 4     // chunk header\n    + 13    // actual IHDR length\n    + 4     // CRC32 check;\n\n\n// WEBPACK FOOTER //\n// ./src/chunks/ihdr.ts","import { ArrayBufferWalker } from '../util/arraybuffer-walker';\n\nconst PRE_HEADER = '\\x89PNG\\r\\n\\x1A\\n';\n\n\n/**\n * PNG files have a very basic header that identifies the PNG\n * file as... a PNG file. We need to write that out.\n * \n * @export\n * @param {ArrayBufferWalker} walker \n */\nexport function writePreheader(walker: ArrayBufferWalker) {\n    walker.writeString(PRE_HEADER);\n}\n\n\nexport const length = PRE_HEADER.length;\n\n\n// WEBPACK FOOTER //\n// ./src/chunks/pre-header.ts","export { PNGRGBAWriter } from './png-writer';\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","import { crc32 } from './crc';\nimport { adler32_buf } from './adler';\n\nfunction swap16(val) {\n    return ((val & 0xFF) << 8)\n        | ((val >> 8) & 0xFF);\n}\n\nfunction swap32(val) {\n    return ((val & 0xFF) << 24)\n        | ((val & 0xFF00) << 8)\n        | ((val >> 8) & 0xFF00)\n        | ((val >> 24) & 0xFF);\n}\n\n\n/**\n * A class that \"walks\" through an ArrayBuffer, either reading or writing\n * values as it goes. Intended as a less performance-draining alternative\n * to a DataView.\n * \n * @export\n * @class ArrayBufferWalker\n */\nexport class ArrayBufferWalker {\n\n\n    /**\n     * The current index our walker is sat at. Can be modified.\n     * \n     * @memberof ArrayBufferWalker\n     */\n    offset = 0;\n    array: Uint8Array;\n\n\n    /**\n     * Creates an instance of ArrayBufferWalker.\n     * @param {(ArrayBuffer | number)} bufferOrLength - either an existing ArrayBuffer\n     * or the length of a new array you want to use.\n     * \n     * @memberof ArrayBufferWalker\n     */\n    constructor(private bufferOrLength: ArrayBuffer | number) {\n        if (bufferOrLength instanceof ArrayBuffer) {\n            this.array = new Uint8Array(bufferOrLength);\n        } else {\n            this.array = new Uint8Array(bufferOrLength);\n        }\n    }\n\n    writeUint32(value, littleEndian = false) {\n\n        if (littleEndian) {\n            value = swap32(value);\n        }\n\n        this.array[this.offset++] = (value >> 24) & 255;\n        this.array[this.offset++] = (value >> 16) & 255;\n        this.array[this.offset++] = (value >> 8) & 255;\n        this.array[this.offset++] = value & 255;\n    }\n\n    writeUint16(value, littleEndian = false) {\n\n        if (littleEndian) {\n            value = swap16(value);\n        }\n\n        this.array[this.offset++] = (value >> 8) & 255;\n        this.array[this.offset++] = value & 255;\n    }\n\n    writeUint8(value) {\n        this.array[this.offset++] = value & 255;\n    }\n\n    writeString(value) {\n        for (let i = 0, n = value.length; i < n; i++) {\n            this.array[this.offset++] = value.charCodeAt(i);\n        }\n    }\n\n    readUint32(littleEndian = false) {\n        let val = this.array[this.offset++] << 24;\n        val += this.array[this.offset++] << 16;\n        val += this.array[this.offset++] << 8;\n        val += this.array[this.offset++] & 255;\n        return littleEndian ? swap32(val) : val;\n    }\n\n    readUint16(littleEndian = false) {\n        let val = this.array[this.offset++] << 8;\n        val += this.array[this.offset++] & 255;\n        return littleEndian ? swap16(val) : val;\n    }\n\n    readUint8() {\n        return this.array[this.offset++] & 255;\n    }\n\n    readString(length) {\n\n        let result = \"\";\n        let target = this.offset + length;\n\n        while (this.offset < target) {\n            result += String.fromCharCode(this.array[this.offset++]);\n        }\n\n        return result;\n\n    }\n\n\n    /**\n     * Move around the array without writing or reading a value.\n     * \n     * @param {any} length \n     * \n     * @memberof ArrayBufferWalker\n     */\n    skip(length) {\n        this.offset += length;\n    }\n\n\n    rewindUint32() {\n        this.offset -= 4;\n    }\n\n    rewindString(length) {\n        this.offset -= length;\n    }\n\n    private crcStartOffset?: number\n\n\n    /**\n     * Mark the beginning of an area we want to calculate the CRC for.\n     * \n     * @memberof ArrayBufferWalker\n     */\n    startCRC() {\n        if (this.crcStartOffset) {\n            throw new Error(\"CRC already started\")\n        }\n        this.crcStartOffset = this.offset;\n    }\n\n\n    /**\n     * After using .startCRC() to mark the start of a block, use this to mark the\n     * end of the block and write the UInt32 CRC value.\n     * \n     * @memberof ArrayBufferWalker\n     */\n    writeCRC() {\n        if (this.crcStartOffset === undefined) {\n            throw new Error(\"CRC has not been started, cannot write\");\n        }\n\n        let crc = crc32(this.array, this.crcStartOffset, this.offset - this.crcStartOffset);\n\n        this.crcStartOffset = undefined;\n        this.writeUint32(crc);\n\n    }\n\n    private adlerStartOffset?: number;\n    private savedAdlerValue?: number;\n\n\n    /**\n     * Similar to .startCRC(), this marks the start of a block we want to calculate the\n     * ADLER32 checksum of.\n     * \n     * @memberof ArrayBufferWalker\n     */\n    startAdler() {\n        if (this.adlerStartOffset) {\n            throw new Error(\"Adler already started\")\n        }\n        this.adlerStartOffset = this.offset;\n    }\n\n\n    /**\n     * ADLER32 is used in our ZLib blocks, but can span across multiple blocks. So sometimes\n     * we need to pause it in order to start a new block.\n     * \n     * @memberof ArrayBufferWalker\n     */\n    pauseAdler() {\n        if (this.adlerStartOffset === undefined) {\n            throw new Error(\"Adler has not been started, cannot pause\");\n        }\n        this.savedAdlerValue = adler32_buf(this.array, this.adlerStartOffset, this.offset - this.adlerStartOffset, this.savedAdlerValue);\n        this.adlerStartOffset = undefined;\n    }\n\n\n    /**\n     * Similar to .writeCRC(), this marks the end of an ADLER32 checksummed block, and\n     * writes the Uint32 checksum value to the ArrayBuffer.\n     * \n     * @returns \n     * \n     * @memberof ArrayBufferWalker\n     */\n    writeAdler() {\n        if (this.adlerStartOffset === undefined && this.savedAdlerValue === undefined) {\n            throw new Error(\"CRC has not been started, cannot write\");\n        }\n\n        if (this.adlerStartOffset === undefined) {\n            this.writeUint32(this.savedAdlerValue);\n            this.savedAdlerValue = undefined;\n            return;\n        }\n\n        let adler = adler32_buf(this.array, this.adlerStartOffset, this.offset - this.adlerStartOffset, this.savedAdlerValue);\n\n        this.adlerStartOffset = undefined;\n        this.writeUint32(adler);\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/util/arraybuffer-walker.ts","import { ArrayBufferWalker } from './arraybuffer-walker';\nimport { crc32 } from './crc';\nimport { adler32_buf } from './adler';\n\n// yes, I know. Crap!\nexport class BlobWriter extends ArrayBufferWalker {\n\n  private blobs: Blob[] = [];\n  private blob: Blob;\n  private crcOffset?: number;\n  private crc?: number;\n  private adlerOffset?: number;\n  private adler?: number;\n\n  constructor(chunkSize = 1024 * 1024 * 16) {\n    super(chunkSize)\n  }\n  writeUint32(value, littleEndian = false) {\n    this.flushIfNoSpace(4);\n    super.writeUint32(value, littleEndian);\n  }\n\n  writeUint16(value, littleEndian = false) {\n    this.flushIfNoSpace(2);\n    super.writeUint16(value, littleEndian);\n  }\n\n  writeUint8(value) {\n    this.flushIfNoSpace(1);\n    super.writeUint8(value);\n\n  }\n\n  writeString(value) {\n    for (let i = 0, n = value.length; i < n; i++) {\n      this.writeUint8(value.charCodeAt(i));\n    }\n  }\n\n  startCRC() {\n    if (this.crcOffset !== undefined) {\n      throw new Error(\"CRC already started\")\n    }\n    this.crc = undefined;\n    this.crcOffset = this.offset;\n  }\n\n  writeCRC() {\n    if (this.crcOffset === undefined) {\n        throw new Error(\"CRC has not been started, cannot write\");\n    }\n\n    const crc = crc32(this.array, this.crcOffset, this.offset - this.crcOffset, this.crc);\n    this.crcOffset = undefined;\n    this.writeUint32(crc);\n  }\n\n  startAdler() {\n    if (this.adlerOffset !== undefined) {\n      throw new Error(\"Adler already started\")\n    }\n    this.adlerOffset = this.offset;\n  }\n\n  pauseAdler() {\n    if (this.adlerOffset === undefined) {\n        throw new Error(\"Adler has not been started, cannot pause\");\n    }\n    this.adler = adler32_buf(this.array, this.adlerOffset, this.offset - this.adlerOffset, this.adler);\n    this.adlerOffset = undefined;\n  }\n\n  writeAdler() {\n    if (this.adlerOffset === undefined && this.adler === undefined) {\n        throw new Error(\"Adler has not been started, cannot pause\");\n    }\n\n    if (this.adlerOffset === undefined) {\n        this.writeUint32(this.adler);\n        this.adler = undefined;\n        return;\n    }\n\n    const adler = adler32_buf(this.array, this.adlerOffset, this.offset - this.adlerOffset, this.adler);\n\n    this.adlerOffset = undefined;\n    this.adler = undefined;\n    this.writeUint32(adler);\n  }\n\n  flushIfNoSpace(spaceNeeded) {\n    if (this.offset + spaceNeeded > this.array.length) {\n      this.flush();\n    }\n  }\n\n  flush() {\n    if (this.offset) {\n      if (this.crcOffset !== undefined) {\n        this.crc = crc32(this.array, this.crcOffset, this.offset - this.crcOffset, this.crc);\n        this.crcOffset = 0;\n      }\n\n      if (this.adlerOffset !== undefined) {\n        this.adler = adler32_buf(this.array, this.adlerOffset, this.offset - this.adlerOffset, this.adler);\n        this.adlerOffset = 0;\n      }\n\n      const data = new Uint8Array(this.array.buffer, 0, this.offset);\n      const blob = new Blob([data]);\n      this.blobs.push(blob);\n      this.offset = 0;\n    }\n  }\n\n  getBlob(type: string) {\n    if (!this.blob) {\n      this.flush();\n      this.blob = new Blob(this.blobs, {type});\n      this.blobs = [];\n      this.array = new Uint8Array(0);\n    }\n    return this.blob;\n  }\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/blob-writer.ts","import { ArrayBufferWalker } from './arraybuffer-walker';\nimport { adler32_buf } from './adler';\n\nexport const ZLIB_WINDOW_SIZE = 1024 * 32; // 32KB\nexport const BLOCK_SIZE = 65535;\n\n\n\n/**\n * Zlibbed data takes up more space than the raw data itself - we aren't\n * compressing it but we do need to add block headers and the like.\n * \n * @export\n * @param {number} dataLength \n * @returns \n */\nexport function calculateZlibbedLength(dataLength: number) {\n\n    let numberOfBlocks = Math.ceil(dataLength / BLOCK_SIZE);\n\n    return 1                                // Compression method/flags code\n        + 1                                 // Additional flags/check bits\n        + (5 * numberOfBlocks)              // Number of Zlib block headers we'll need\n        + 4                                 // ADLER checksum\n        + dataLength;                       // The actual data.\n};\n\n\n/**\n * Our tool for writing IDAT chunks. Although Zlib is used for compression,\n * we aren't compressing anything here. Basically, this writes a Zlib chunk\n * as if it is set to a compression level of 0.\n * \n * @export\n * @class ZlibWriter\n */\nexport class ZlibWriter {\n\n    bytesLeftInWindow = 0;\n    bytesLeft: number;\n\n    constructor(private walker: ArrayBufferWalker, dataLength: number) {\n        this.bytesLeft = dataLength;\n        this.writeZlibHeader();\n        this.startBlock();\n    }\n\n    writeZlibHeader() {\n        // http://stackoverflow.com/questions/9050260/what-does-a-zlib-header-look-like\n\n        let cinfo = Math.LOG2E * Math.log(ZLIB_WINDOW_SIZE) - 8;\n        let compressionMethod = 8; // DEFLATE, only valid value.\n\n        let zlibHeader = new Uint8Array(2);\n        let cmf = (cinfo << 4) | compressionMethod;\n\n        // Lifted a lot of this code from here: https://github.com/imaya/zlib.js/blob/master/src/deflate.js#L110\n\n        let fdict = 0; // not totally sure what this is for\n        let flevel = 0; // compression level. We don't want to compress at all\n\n        let flg = (flevel << 6) | (fdict << 5);\n        let fcheck = 31 - (cmf * 256 + flg) % 31;\n        flg |= fcheck;\n\n        this.walker.writeUint8(cmf);\n        this.walker.writeUint8(flg);\n\n    }\n\n    startBlock() {\n\n        // Whether this is the final block. If we've got less than 32KB to write, then yes.\n        let bfinal = this.bytesLeft < BLOCK_SIZE ? 1 : 0;\n\n        // Compression type. Will always be zero = uncompressed\n        let btype = 0;\n\n        // Again, this logic comes from: https://github.com/imaya/zlib.js/blob/master/src/deflate.js#L110\n\n        let blockLength = Math.min(this.bytesLeft, BLOCK_SIZE);\n\n        this.walker.writeUint8((bfinal) | (btype << 1));\n\n        let nlen = (~blockLength + 0x10000) & 0xffff;\n\n        // IMPORTANT: these values must be little-endian.\n        this.walker.writeUint16(blockLength, true);\n        this.walker.writeUint16(nlen, true);\n\n        this.bytesLeftInWindow = Math.min(this.bytesLeft, BLOCK_SIZE);\n        this.walker.startAdler();\n    }\n\n    writeUint8(val: number) {\n\n        if (this.bytesLeft <= 0) {\n            throw new Error(\"Ran out of space\")\n        }\n\n        if (this.bytesLeftInWindow === 0 && this.bytesLeft > 0) {\n            this.walker.pauseAdler();\n            this.startBlock();\n\n        }\n\n        this.walker.writeUint8(val);\n        this.bytesLeftInWindow--;\n        this.bytesLeft--;\n\n\n    }\n\n    end() {\n        this.walker.writeAdler();\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/zlib.ts"],"sourceRoot":""}